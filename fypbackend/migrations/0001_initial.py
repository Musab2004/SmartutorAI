# Generated by Django 4.2.3 on 2024-04-11 06:25

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import fypbackend.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "name",
                    models.CharField(help_text="Name of the Author", max_length=100),
                ),
                (
                    "email_address",
                    models.EmailField(
                        help_text="Email of the person", max_length=100, unique=True
                    ),
                ),
                ("current_academic_level", models.TextField()),
                (
                    "profile_pic",
                    models.ImageField(
                        default="images/default_user.png",
                        null=True,
                        upload_to="images/",
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("is_staff", models.BooleanField(default=False)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            managers=[
                ("objects", fypbackend.models.PersonManager()),
            ],
        ),
        migrations.CreateModel(
            name="AnswersPost",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("isreply", models.BooleanField(null=True)),
                ("text", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "is_downvoted",
                    models.ManyToManyField(
                        blank=True,
                        related_name="downvoted_answers",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "is_upvoted",
                    models.ManyToManyField(
                        blank=True,
                        related_name="upvoted_answers",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Book",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name="Chapter",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("order", models.PositiveIntegerField()),
                (
                    "book",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="fypbackend.book",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="QueryPost",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("content", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "is_downvoted",
                    models.ManyToManyField(
                        blank=True,
                        related_name="downvoted_posts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "is_upvoted",
                    models.ManyToManyField(
                        blank=True,
                        related_name="upvoted_posts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Question",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("question", models.TextField()),
                ("answer", models.TextField()),
                ("distractors", models.TextField()),
                ("is_mcq", models.BooleanField(default=True)),
                ("context", models.TextField()),
                ("feedback", models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name="Quiz",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_completed", models.BooleanField(default=False)),
                ("followup_quiz", models.BooleanField(default=False)),
                ("is_mcq", models.BooleanField(default=True)),
                (
                    "correct_questions",
                    models.ManyToManyField(
                        blank=True,
                        null=True,
                        related_name="correct_questions",
                        to="fypbackend.question",
                    ),
                ),
                (
                    "questions",
                    models.ManyToManyField(
                        blank=True,
                        null=True,
                        related_name="questions",
                        to="fypbackend.question",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="StudyPlan",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("duration", models.IntegerField()),
                ("QuizesPerWeek", models.IntegerField(default=1)),
                ("subject", models.TextField()),
                ("academic_level", models.TextField()),
                ("is_completed", models.BooleanField(default=False)),
                ("is_public", models.BooleanField(default=False)),
                (
                    "image",
                    models.ImageField(
                        blank=True,
                        default="images/default_studyplan.jpeg",
                        null=True,
                        upload_to="images/",
                    ),
                ),
                (
                    "books",
                    models.ManyToManyField(blank=True, null=True, to="fypbackend.book"),
                ),
                (
                    "members",
                    models.ManyToManyField(
                        null=True,
                        related_name="joined_studyplan",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="owned_study_plans",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Topic",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("content", models.TextField()),
                ("order", models.PositiveIntegerField(null=True)),
                (
                    "book",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="fypbackend.book",
                    ),
                ),
                (
                    "chapter",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="fypbackend.chapter",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="WeeklyGoals",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("start_date", models.DateField()),
                ("order", models.IntegerField(default=1)),
                ("is_completed", models.BooleanField(default=False)),
                ("is_started", models.BooleanField(default=True)),
                ("end_date", models.DateField()),
                (
                    "all_topics",
                    models.ManyToManyField(
                        blank=True,
                        related_name="alltopics_in_weekly_goals",
                        to="fypbackend.topic",
                    ),
                ),
                (
                    "quizes",
                    models.ManyToManyField(blank=True, null=True, to="fypbackend.quiz"),
                ),
                (
                    "study_plan",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="weekly_goals",
                        to="fypbackend.studyplan",
                    ),
                ),
                (
                    "topics_covered",
                    models.ManyToManyField(
                        blank=True,
                        related_name="covered_in_weekly_goals",
                        to="fypbackend.topic",
                    ),
                ),
                (
                    "topics_to_be_covered",
                    models.ManyToManyField(
                        blank=True,
                        related_name="planned_in_weekly_goals",
                        to="fypbackend.topic",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="UserActivity",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField()),
                ("time_spent", models.IntegerField(default=0)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ReportPost",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("reason", models.TextField()),
                (
                    "post",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reported_posts",
                        to="fypbackend.querypost",
                    ),
                ),
                (
                    "reporter",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ReportAnswers",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("reason", models.TextField()),
                (
                    "answerpost",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reported_comments",
                        to="fypbackend.answerspost",
                    ),
                ),
                (
                    "reporter",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="QuizRoom",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("duration", models.IntegerField()),
                ("is_mcq", models.BooleanField(default=True)),
                ("is_completed", models.BooleanField(default=False)),
                ("date", models.DateField(null=True)),
                ("time", models.TimeField(null=True)),
                (
                    "Topicses",
                    models.ManyToManyField(
                        blank=True, null=True, to="fypbackend.topic"
                    ),
                ),
                (
                    "members",
                    models.ManyToManyField(
                        null=True,
                        related_name="joined_quizroom",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="owned_quizroom",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "study_plan",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="quizroom",
                        to="fypbackend.studyplan",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="quiz",
            name="topics",
            field=models.ManyToManyField(null=True, to="fypbackend.topic"),
        ),
        migrations.AddField(
            model_name="quiz",
            name="weekid",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="fypbackend.weeklygoals"
            ),
        ),
        migrations.AddField(
            model_name="quiz",
            name="wrong_questions",
            field=models.ManyToManyField(
                blank=True,
                null=True,
                related_name="wrong_questions",
                to="fypbackend.question",
            ),
        ),
        migrations.AddField(
            model_name="question",
            name="quiz",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="belongs_to_quiz",
                to="fypbackend.quiz",
            ),
        ),
        migrations.AddField(
            model_name="question",
            name="topic",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="fypbackend.topic"
            ),
        ),
        migrations.AddField(
            model_name="querypost",
            name="study_plan",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="posts",
                to="fypbackend.studyplan",
            ),
        ),
        migrations.AddField(
            model_name="answerspost",
            name="parent",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="parent_post",
                to="fypbackend.querypost",
            ),
        ),
        migrations.AddField(
            model_name="answerspost",
            name="post",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="comments",
                to="fypbackend.querypost",
            ),
        ),
    ]
